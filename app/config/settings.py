import os

import toml

pyproject = toml.load("pyproject.toml")
VERSION: str = pyproject["tool"]["poetry"]["version"]
API_V1_STR: str = "v1"
PROJECT_NAME: str = pyproject["tool"]["poetry"]["name"]
PROJECT_ADMIN_EMAIL: str = os.environ.get("PROJECT_ADMIN_EMAIL", "ant@protonmail.com")

DB_TYPE: str = os.environ.get("DB_TYPE", "postgres")

CLICKHOUSE_HOST: str = os.environ.get("CLICKHOUSE_HOST", "localhost")
CLICKHOUSE_USER: str = os.environ.get("CLICKHOUSE_USER", "user")
CLICKHOUSE_DB: str = os.environ.get("CLICKHOUSE_DB", "db")
CLICKHOUSE_PASSWORD: str = os.environ.get("CLICKHOUSE_PASSWORD", "pass")

MONGO_HOST: str = os.environ.get("MONGO_HOST", "localhost")
MONGO_USER: str = os.environ.get("CLICKHOUSE_USER", "user")
MONGO_DB: str = os.environ.get("CLICKHOUSE_DB", "db")
MONGO_PASSWORD: str = os.environ.get("MONGO_PASSWORD", "pass")
MONGO_PORT: str = os.environ.get("MONGO_PASSWORD", "27017")

POSTGRES_HOST: str = os.environ.get("POSTGRES_HOST", "localhost")
POSTGRES_PORT: str = os.environ.get("POSTGRES_PORT", "5432")
POSTGRES_USER: str = os.environ.get("POSTGRES_USER", "user")
POSTGRES_PASSWORD: str = os.environ.get("POSTGRES_PASSWORD", "pass")
POSTGRES_DB: str = os.environ.get("POSTGRES_DB", "db")

DB_TIMEOUT: int = int(os.environ.get("DB_TIMEOUT", 20))
DB_POOL_SIZE: int = int(os.environ.get("DB_POOL_SIZE", 5))
DB_MAX_OVERFLOW: int = int(os.environ.get("DB_MAX_OVERFLOW", 5))

USER_ROLE = {"admin": 333, "manager": 222, "user": 111, "bot": 444}

API_KEY_SCHEME: str = "Token"
API_KEY_NAME: str = "Authorization"
DESCRIPTION_TOKEN: str = """
  For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in.
  This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.
  A JWT token is generated by the API by either registering via /users or logging in via /users/login.
  The following format must be in the 'Authorization' header :
  Token xxxxxx.yyyyyyy.zzzzzz
  """

SECRET: str = (
    'y^RP*&fyvcytoro4656r8789ub"*G&FP*^fg7yfuto6f7o65dcgjHG(*R65d46rcyfgvjhuui7T^'
)
SECRET_ID = "&hg765^$IU^&%^doctv*fVL"

ALGORITHM: str = "HS256"
COUNT_DEVICES: int = 3
ACCESS_TOKEN_EXPIRE_MINUTES = 30
REFRESH_TOKEN_EXPIRE_MINUTES = 10080
SALT = "9j086fdsf__sdff7g9g8^^$Dyc67"
ALLOWED_HOSTS: list[str] = ["*"]

ALLOWED_REGISTRATION_USER = True
DOMAIN_BLACK_LIST = ["google.com"]

try:
    from .local import *  # type: ignore # noqa
except ImportError:
    pass


def get_uri() -> str:
    sqlalchemy_database_uri: str = ""
    if DB_TYPE == "postgres":
        #  'postgres://user:pass@localhost:5432/foobar'
        sqlalchemy_database_uri = "postgresql+asyncpg://%s:%s@%s:%s/%s" % (
            POSTGRES_USER,
            POSTGRES_PASSWORD,
            POSTGRES_HOST,
            POSTGRES_PORT,
            POSTGRES_DB,
        )
    else:
        print(f"bad DB_TYPE: {DB_TYPE}")
        exit()
    return sqlalchemy_database_uri


SQLALCHEMY_DATABASE_URI: str = get_uri()
print(SQLALCHEMY_DATABASE_URI)
